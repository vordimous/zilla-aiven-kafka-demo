name: SSE-example
bindings:

# Gateway ingress config
  tcp_server:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 8080
    exit: http_server
  http_server:
    type: http
    kind: server
    options:
      access-control:
        policy: cross-origin
    routes:
      - when:
          - headers:
              :scheme: http
              :authority: localhost:8080
              :path: /events
        exit: sse_server
      - when:
          - headers:
              :scheme: http
              :authority: localhost:8080
        exit: http_filesystem_proxy

# UI html file server
  http_filesystem_proxy:
    type: http-filesystem
    kind: proxy
    routes:
      - when:
          - path: /{path}
        with:
          path: ${params.path}
        exit: filesystem_server
  filesystem_server:
    type: filesystem
    kind: server
    options:
      location: /var/www/

# SSE Proxy Server
  sse_server:
    type: sse
    kind: server
    exit: sse_kafka_proxy
  sse_kafka_proxy:
    type: sse-kafka
    kind: proxy
    routes:
      - when:
          - path: /events
        exit: kafka_cache_client
        with:
          topic: just_posts
  kafka_cache_client:
    type: kafka
    kind: cache_client
    exit: kafka_cache_server
  kafka_cache_server:
    type: kafka
    kind: cache_server
    exit: aiven_kafka_client

# Aiven Kafka config
  aiven_kafka_client:
    type: kafka
    kind: client
    exit: aiven_tls_client
  aiven_tls_client:
    type: tls
    kind: client
    vault: aiven_cert_vault
    options:
      trust:
        - ${{env.TRUST_CERT_ALIAS}}
      keys:
        - ${{env.KEY_CERT_ALIAS}}
      sni:
        - ${{env.AIVEN_SERVER_HOSTNAME}}
    exit: aiven_tcp_client
  aiven_tcp_client:
    type: tcp
    kind: client
    options:
      host: ${{env.AIVEN_SERVER_HOSTNAME}}
      port: ${{env.AIVEN_SERVER_PORT}}
    routes:
      - when:
          - cidr: 0.0.0.0/0

vaults:
  aiven_cert_vault:
    type: filesystem
    options:
      trust:
        store: certs/truststore.p12
        type: pkcs12
        password: ${{env.TRUSTORE_PASSWORD}}
      keys:
        store: certs/keystore.p12
        type: pkcs12
        password: ${{env.KEYSTORE_PASSWORD}}
